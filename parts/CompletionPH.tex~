% Completion of PH network (Circadian clock)

\section{Completion of PH networks}

\subsection{ Asynchronous and non-deterministic networks}

\subsection{Algorithm}

\begin{itemize}
	\item INPUT:  a Process Hitting and a chronogram of the genes evolution.% and possible genes influences.

	\item Step 1: Sample the chronogram for each gene at each time step.

	\item Step 2: For each time step where a gene $G$ changes its value from $val$ to $val'$:

	\begin{itemize}
		\item[-] 2.1: Compute $D$, the delay since the last time a gene has changed.
		\item[-] 2.2: Generate all actions with delay $D$ which involve all subsets of the genes $X_1, \ldots, X_n$ having an influence on $G$:
		$$action(X_1,Val_1,\ldots, X_n,Val_n, G, val, val', D)$$
	\end{itemize}

	\item Step 3: For each action with the same hitters, $X_1,Val_1,\ldots, X_n,Val_n$ and the same target, $G, val, val'$, merge into one action where the delay is the average.
	\item OUTPUT:  a completed Process Hitting that realize the chronogram.

\end{itemize}

\begin{theorem}[Complexity]
	\label{th:complexity}
	Let $PH$ be a Process Hitting, $S$ be the number of sorts of $PH$ and $P$ be the maximal number of processes of a sort of $PH$.
	Let $C$ be a chronogram of the genes of $PH$ over $T$ units of times.
	The complexity of completing $PH$ by learning actions from the observations of $C$ with our algorithm belongs to $O(T*P^{S+1})$.
	\begin{proof}
	Let $i$ be the maximal indegree of an action in $PH$, $0 \leq i \leq P$.
	Let $p$ be a process of $PH$ and $n$ be the number of sorts that can influence $p$.
	There is $i^S$ possible combinations of those process that can hit $p$, each of those can form an action.
	Since there is $P$ process, there are $P * i^S$ possibles actions, thus the memory of our algorithm is bound by $O(P * i^S)$,
	which belongs to $O(P^{S+1})$ since $0 \leq i \leq P$.
	
	Sampling the chronogram (step 1) is linear in the number of time step and then bound by $O(T)$.
	At each time step, atmost one gene can change its value in the chronogram $C$.
	Thus atmost $i^S$ actions can be produced at each time step, the complexity is then bound by $O(T * i^S)$.
	Since $0 \leq i \leq P$, the complexity of generating actions from the observations of $C$ (Step 2) belongs by $O(T * P^S)$.
	Merging the actions (step 3) is linear in the number of actions and then bound by $O(P^{S+1})$.
	So, finally, the complexity of completing $PH$ by learning actions from the observations of $C$ with our algorithm is $O(T + T * i^S + P^{S+1})$,
	which belongs to $O(T * P^{S+1})$
	
	% memory bound
	$\qed$
	\end{proof}
\end{theorem}

%dire que les action du PH de base sont aussi merge dans le step 3. Et qu'elle peuvent etre donnee de base dans l'apprentissage
% Dire que les influences doivent etre donnees, ou alors on genere toutes les influences possibles.


